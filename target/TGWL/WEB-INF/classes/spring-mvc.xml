<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.dawn.controller" />  
    
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
	            <value>text/json;charset=UTF-8</value>
	            <value>text/plain;charset=UTF-8</value>
            </list>
        </property>  
    </bean>  
    
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
    
    <!-- Freemarker配置 -->  
	<bean id="freemarkerConfig"  
	      class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
	    <property name="templateLoaderPath" value="/WEB-INF/views/" />  
	    <property name="freemarkerSettings">  
	        <props>  
	            <prop key="template_update_delay">0</prop>  
	            <prop key="default_encoding">UTF-8</prop>  
	            <prop key="number_format">0.##########</prop>  
	            <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>  
	        	<!--用于解决前端报空指针问题-->
	            <prop key="classic_compatible">true</prop>  
	            <prop key="template_exception_handler">ignore</prop>
	            <prop key="whitespace_stripping">true</prop>
            	<prop key="auto_import">/spring.ftl as s</prop>
	        </props>  
	    </property>  
	</bean>  
	<!--视图解释器 -->  
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
	    <property name="cache" value="true" />  
        <!-- <property name="prefix" value="/WEB-INF/views/" />   -->
        <property name="suffix" value=".ftl" />  
        <property name="contentType" value="text/html;charset=UTF-8"></property>  
        <property name="requestContextAttribute" value="request" />  
        <property name="exposeSpringMacroHelpers" value="true" />  
        <property name="exposeRequestAttributes" value="true" />  
        <property name="exposeSessionAttributes" value="true" /> 
	</bean> 
    
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址  
        <property name="prefix" value="/WEB-INF/views/" />  
        <property name="suffix" value=".ftl" />  
    </bean>   -->
    
    <!-- 增加对json的支持 -->
	<bean id="convereJson" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
	<bean id="anotationAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="convereJson" />
			</list>
		</property>
	</bean>
    
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>
    
    <!-- date format start -->
	<mvc:annotation-driven conversion-service="conversionService" />

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="registerDefaultFormatters" value="false" />
		<property name="formatterRegistrars">
			<set>
				<bean class="org.springframework.format.datetime.DateFormatterRegistrar">
					<property name="formatter" ref="dateFormatter">
					</property>
				</bean>
			</set>
		</property>
	</bean>
	
	<bean id="dateFormatter" class="org.springframework.format.datetime.DateFormatter">
		<property name="pattern" value="yyyy/MM/dd"></property>
	</bean>
	<!-- date format end -->
	
	<!-- <bean id="commonInterceptor" class="com.dawn.interceptor.CommonIntercepter" >
		<property name="uncheckUrls"> 
          <list> 
               <value>/index.html</value> 
		  </list> 
        </property> 
	</bean>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**"/>
			<ref bean="commonInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors> -->
  
</beans>  
